<script id="page-7" title="Backbone Model" type="text/haml-template">
%pre(class="sh_javascript")
  !  window.Todo = Backbone.Model.extend({
  !
  !   EMPTY: "empty todo...",
  !
  !   initialize: function() {
  !     if (!this.get("content")) {
  !       this.set({"content": this.EMPTY});
  !     }
  !   },
  !
  !   toggle: function() {
  !     this.save({done: !this.get("done")});
  !   },
  !
  !   clear: function() {
  !     this.destroy();
  !     this.view.remove();
  !   }
  !
  !  });
%script(type="text/javascript")
  sh_highlightDocument();
</script>

<script id="page-7-1" type="text/haml-template">
%pre(class="sh_javascript")
  !// The collection of todos is backed by *localStorage* instead of a remote server.
  !window.TodoList = Backbone.Collection.extend({
  !
  !  // Reference to this collection's model.
  !  model: Todo,
  !
  !  // Save all of the todo items under the `"todos"` namespace.
  !  localStorage: new Store("todos"),
  !
  !  // Filter down the list of all todo items that are finished.
  !  done: function() {
  !    return this.filter(function(todo){ return todo.get('done'); });
  !  },
  !
  !  // Filter down the list to only todo items that are still not finished.
  !  remaining: function() {
  !    return this.without.apply(this, this.done());
  !  },
  !
  !  // We keep the Todos in sequential order, despite being saved by unordered
  !  // GUID in the database. This generates the next order number for new items.
  !  nextOrder: function() {
  !    if (!this.length) return 1;
  !    return this.last().get('order') + 1;
  !  },

%script(type="text/javascript")
  sh_highlightDocument();
</script>

<script id="page-7-2" type="text/haml-template">
%pre(class="sh_javascript")
  !ns.Upgrade = Backbone.Model.extend({
  !
  !  listing : null,
  !
  !  initialize: function (options) {
  !    if (!options.listing) {
  !      throw 'Listing is required';
  !    }
  !    this.listing = options.listing;
  !  },
  !
  !  url : function () {
  !    return '/agentdesktop/listings/' + this.listing.get('id') + '/upgrades';
  !  },
  !
  !  toJSON : function () {
  !    return {
  !      duration : this.get('duration') || null,
  !      price : this.get('price') || null,
  !      name : this.get('name') || null,
  !      description : this.get('description') || null
  !    };
  !  }
  !});
%script(type="text/javascript")
  sh_highlightDocument();
</script>

<script id="page-7-3" type="text/haml-template">
%pre(class="sh_javascript")
  !var listing = new ns.Listing({id: 10001});
  !var upgrade = new ns.Upgrade({ listing: currentListing });
  !
  !upgrade.fetch();
  !
  !upgrade.set({value: "120"});
  !
  !upgrade.save();
%script(type="text/javascript")
  sh_highlightDocument();
</script>